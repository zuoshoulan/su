apiVersion: v1
kind: Service
metadata:
  name: ${podname}
  namespace: default
spec:
  externalTrafficPolicy: Local
  ports:
    - nodePort: 31012
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: ${podname}
  sessionAffinity: None
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: '1'
  generation: 1
  labels:
    app: ${podname}
  name: ${podname}
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: ${replicas}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: ${podname}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ${podname}
        armsPilotAutoEnable: "on"
        armsPilotCreateAppName: ${podname}
        one-agent.jdk.version: "OpenJDK11"
        version: latest
    spec:
      containers:
        - env:
            - name: LANG
              value: C.UTF-8
            - name: JAVA_HOME
              value: /opt/java/openjdk
            - name: aliyun_logs_log-${podname}
              value: /www/logs/gateway/service.log*
          volumeMounts:
            - name: volumn-sls-gateway
              mountPath: /www/logs/gateway
          image: ${imagename}
          imagePullPolicy: IfNotPresent
          name: ${podname}
          command: [ "java" ]
          args: [ "-Djava.security.egd=file:/dev/./urandom","-Dspring.profiles.active=${envack}","-jar","/app/gateway-deploy.jar" ]
          ports:
            - containerPort: 80
              protocol: TCP
          resources:
            requests:
              cpu: ${cpu}
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      volumes:
        - name: volumn-sls-gateway
          emptyDir: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      imagePullSecrets:
        - name: sup-${envack}-registry
      schedulerName: default-scheduler
      securityContext: { }
      terminationGracePeriodSeconds: 30
